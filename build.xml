<?xml version="1.0" encoding="UTF-8"?>
<project
	name="clianthus"
	default="jar"
	xmlns:ivy="antlib:org.apache.ivy.ant"
	>

	<property name="src" location="src"/>
	<property name="src.ant" location="${src}/ant"/>
	<property name="src.main" location="${src}/main"/>
	<property name="src.main.java" location="${src.main}/java"/>
	<property name="src.main.resources" location="${src.main}/resources"/>
	<property name="src.test" location="${src}/test"/>
	<property name="src.test.java" location="${src.test}/java"/>
	<property name="src.maven" location="${src}/maven"/>
	<property name="target" location="target"/>
	<property name="target.classes" location="${target}/classes"/>
	<property name="target.src" location="${target}/src"/>
	<property name="target.src.test" location="${target.src}/test"/>
	<property name="target.src.test.java" location="${target.src.test}/java"/>
	<property name="target.doc" location="${target}/doc"/>
	<property name="target.doc.apidocs" location="${target.doc}/apidocs"/>
	<property name="target.src.main" location="${target.src}/main"/>
	<property name="target.src.main.java" location="${target.src.main}/java"/>
	<property name="target.test" location="${target}/test"/>
	<property name="target.testreports" location="${target}/testreports"/>
	<property name="target.artifacts" location="${target}/artifacts"/>
	<property name="target.artifacts.jar" location="${target.artifacts}/jar"/>
	<property name="target.artifacts.pom" location="${target.artifacts}/pom"/>
	<property name="target.obs" location="${target}/obs"/>
	<property name="datadir" location="/usr/share"/>
	<property name="datadir.java" location="${datadir}/java"/>
	<property name="datadir.javadoc" location="${datadir}/javadoc"/>
	<property name="datadir.javadoc.java" location="${datadir.javadoc}/java"/>
	<property environment="env"/>
	<property file="${src.ant}/config.properties"/>

	<path id="modulesourcepath.main">
		<pathelement location="${src.main.java}"/>
	</path>

	<path id="modulepath.main">
		<path refid="modulepath.main.resolved"/>
		<pathelement
			location="${target.classes}/${project.moduleprefix}"
			/>
	</path>

	<path id="modulesourcepath.test">
		<pathelement
			location="${src.test.java}"
			/>
	</path>

	<path id="modulepath.test">
		<pathelement
			location="${target.classes}/${project.moduleprefix}.test"
			/>
		<path refid="modulepath.test.resolved"/>
	</path>

	<!-- Import supplementary Ant projects -->
    <import file="${src.ant}/install.ant"/>
	<import file="${src.ant}/obs.ant"/>

	<target name="resolve" description="Retrieve dependencies with Ivy">
		<ivy:resolve conf="compile"/>
		<ivy:cachepath conf="compile" pathid="modulepath.main.resolved"/>
		<ivy:cachepath conf="test" pathid="modulepath.test.resolved"/>
	</target>

	<target name="compile"
		description="Compile sources"
		depends="compile.java"
		/>

	<target name="compile.java"
			description="Compile Java sources"
			depends="resolve"
			>
		<mkdir dir="${target.classes}/${project.moduleprefix}"/>
		<javac
			destdir="${target.classes}"
			release="11"
			includeantruntime="false"
			encoding="UTF-8"
			createMissingPackageInfoClass="false"
			>
			<modulesourcepath refid="modulesourcepath.main"/>
			<modulesourcepath refid="modulesourcepath.test"/>
			<modulepath refid="modulepath.test"/>
			<!--compilerarg value="-Xlint"/-->
			<!--compilerarg value="-Xdoclint"/-->
			<!--compilerarg value="-Xpkginfo:always"/-->
			<compilerarg value="-Xdiags:verbose"/>
		</javac>
	</target>

	<target name="copy.resources">
		<copy todir="${target.classes}">
			<fileset dir="${src.main.resources}" includes="**"/>
		</copy>
		<mkdir
            dir="${target.classes}/${project.moduleprefix}/META-INF/licenses"
            />
		<copy
			todir="${target.classes}/${project.moduleprefix}/META-INF/licenses"
			file="LICENSE"
			/>
		<mkdir
            dir="${target.classes}/${project.moduleprefix}/META-INF/maven/${project.maven.groupId}/${project.maven.artifactId}"
            />
        <echoproperties
            destfile="${target.classes}/${project.moduleprefix}/META-INF/maven/${project.maven.groupId}/${project.maven.artifactId}/pom.properties"
            >
            <propertyset>
				<propertyref prefix="project.maven."/>
				<mapper type="glob" from="project.maven.*" to="*"/>
			</propertyset>
		</echoproperties>
	</target>

	<target name="pom"
		description="Generate POM"
		>
		<ivy:makepom
			ivyfile="ivy.xml"
			templatefile="${src.maven}/${project.moduleprefix}.pom"
			pomfile="${target.artifacts}/pom/${project.moduleprefix}-${project.version}.pom"
			>                                  
			<ivy:mapping conf="default" scope="compile"/>
		</ivy:makepom>
	</target>

	<target name="jar"
		description="Build Jar"
		depends="compile,copy.resources">
		<jar
			jarfile="${target.artifacts}/jar/${project.moduleprefix}-${project.version}.jar"
            basedir="${target.classes}/${project.moduleprefix}"
			>
		</jar>
	</target>

	<target name="build"
		description="Build project"
		depends="jar,pom,docs"
		/>

	<target name="clean" description="Clean build directory">
		<delete dir="${target}"/>
	</target>

	<target name="docs"
		description="Build documentation"
		depends="apidocs"
		/>

	<target name="apidocs"
		description="Build API documentation"
		depends="jar"
		>
		<javadoc
				modulesourcepathref="modulesourcepath.main"
				destdir="${target.doc.apidocs}"
				access="public"
				encoding="UTF-8"
				charset="UTF-8"
				windowtitle="${project.name} ${project.version}"
				>
			<module name="${project.moduleprefix}"/>
			<modulepath refid="modulepath.main"/>
			<arg value="-Xdoclint:missing,reference"/>
			<link href="file://${datadir.javadoc.java}"/>
		</javadoc>
	</target>
	
	<target name="dist.tar" description="Make Tar distribution">
		<exec outputproperty="git.stashname" executable="git">
			<arg value="stash"/>
			<arg value="create"/>
		</exec>
		<condition property="git.object" value="HEAD" else="${git.stashname}">
			<length string="${git.stashname}" when="eq" length="0"/>
		</condition>
		<echo message="${git.object}"/>
		<mkdir dir="${target}"/>
		<exec executable="git">
			<arg value="archive"/>
			<arg value="--prefix"/>
			<arg value="${project.name}-${project.version}/"/>
			<arg value="--output"/>
			<arg value="${target}/${project.name}-${project.version}.tar.xz"/>
			<arg value="${git.object}"/>
			<arg value="--"/>
			<arg value="build.xml"/>
			<arg value="src"/>
			<arg value="README"/>
			<arg value="README.md"/>
			<arg value="LICENSE"/>
			<arg value="AUTHORS"/>
			<arg value="ivy.xml"/>
			<arg value="ivysettings.xml"/>
		</exec>
	</target>

	<target name="test" depends="compile.java">
		<mkdir dir="${target.testreports}"/>
		<junitlauncher haltOnFailure="true" printSummary="true">
			<classpath refid="modulepath.main"/>
			<classpath refid="modulepath.test"/>
			<testclasses outputdir="${target.testreports}">
				<fileset
					dir="${target.classes}/${project.moduleprefix}.test"
					>
					<include name="**/Test*.class"/>
				</fileset>
				<listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
				<listener type="legacy-plain" sendSysOut="true" />
            </testclasses>
        </junitlauncher>
	</target>

	<target name="artifacts"
		description="Build artifacts"
		depends="jar,pom"
		/>

	<target name="deploy" depends="artifacts">
		<ivy:publish
			resolver="github-packages"
			overwrite="true"
			forcedeliver="true"
			artifactspattern="${target.artifacts}/[type]/[organisation].[artifact]-[revision].[ext]"
			/>
	</target>

</project>
